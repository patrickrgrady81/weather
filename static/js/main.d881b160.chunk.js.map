{"version":3,"sources":["reducers/rootReducer.js","actions/getLatLng.js","components/nav/Nav.js","components/map/Map.js","components/displayWeather/current/Current.js","components/displayWeather/hourly/Hourly.js","components/displayWeather/daily/Daily.js","components/displayWeather/DisplayWeather.js","App.js","components/profile/Profile.js","components/travel/restaurants/Restaurants.js","actions/restaurants.js","components/travel/events/Events.js","actions/events.js","components/auth/Register.js","components/auth/Login.js","index.js"],"names":["initialState","city","weather","hourly","daily","map","restaurants","events","loggedIn","email","loading","rootReducer","state","action","type","getLatLng","dispatch","a","process","url","fetchInfo","fetch","response","json","data","newCity","results","locations","adminArea5","adminArea3","Nav","props","render","className","onSubmit","go","placeholder","onChange","changer","value","searchValue","onClick","to","getLog","e","setState","target","preventDefault","Component","connect","width","height","src","alt","getDate","date","toLocaleDateString","getTime","tim","temp","timeNow","Date","hrs","getHours","postfix","mins","getMinutes","showMins","secs","getSeconds","showSecs","getRain","precipitation_type","amt","precipitation","units","getSunrise","sunrise","getSunset","sunset","getWindDir","direction","wind_direction","message","key","weather_code","toUpperCase","replace","feels_like","cloud_cover","wind_speed","humidity","visibility","observation_time","time","slice","hour","i","toLowerCase","getDay","day","min","max","App","componentDidMount","run","latlng","getWeather","getHourlyForecast","getDailyForecast","fields","query","lat","lng","updateWeather","updateHourly","updateDaily","address","displayLatLng","getMap","updateCity","updateMap","prevProps","this","Profile","Restaurants","rest","name","image_url","categories","title","display_phone","location","address1","zip_code","updateRestaurants","componentDidUpdate","body","JSON","stringify","Events","length","handleForm","searched","searchedEvents","_embedded","venues","classifications","genre","dates","start","localDate","localTime","handleChange","search","localSearchedEvents","forEach","includes","push","updateEvents","searchEvents","Register","handleSubmit","user","password","password_confirmation","console","log","created","login","id","errors","required","Login","logged_in","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.d881b160.chunk.js","sourcesContent":["const initialState = {\n  city: \"Philadelphia, PA\",\n  weather: null,\n  hourly: null,\n  daily: null, \n  map: null,\n  restaurants: null,\n  events: null,\n  loggedIn: false,\n  email: null,\n  loading: 'idle'\n}\n\nconst rootReducer = (state = initialState, action) => {\n  // if (typeof state === 'undefined') {\n  //   return initialState\n  // }\n\n  switch (action.type) {\n    case 'UPDATE_CITY':\n      return {...state, city: action.city };\n    \n    case 'UPDATE_MAP':\n      return {...state, map: action.map };\n    \n    case 'UPDATE_DAILY':\n      return {...state, daily: action.daily };\n\n    case 'UPDATE_HOURLY':\n      return {...state, hourly: action.hourly };\n\n    case 'UPDATE_WEATHER':\n      return {...state, weather: action.weather };\n\n    case 'UPDATE_RESTAURANTS':\n      return {...state, restaurants: action.restaurants };\n    \n    case 'UPDATE_EVENTS':\n      return {...state, events: action.events };\n\n    case 'LOGIN':\n      return {...state, loggedIn: true, email: action.email };\n    case 'START_LOADING':\n      return { ...state, loading: 'pending' }\n    case 'LOADING_SUCCESS':\n      return { ...state, loading: 'success' }\n    case 'LOADING_FAILURE':\n      return {...state, loading: 'failure' }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","export const getLatLng = (city) => { \n  return async (dispatch) => {\n    const key = process.env.REACT_APP_MAPQUEST;\n    const url = `https://www.mapquestapi.com/geocoding/v1/address?key=${key}&inFormat=kvp&outFormat=json&location=${city}`;\n    const fetchInfo = {\n      \"method\": \"GET\",\n      \"headers\": {}\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    const newCity = `${data.results[0].locations[0].adminArea5}, ${data.results[0].locations[0].adminArea3}`;\n    dispatch({ type: 'UPDATE_CITY', city: newCity });\n  }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { getLatLng } from '../../actions/getLatLng'\nimport \"./Nav.css\"\n\nclass Nav extends Component {\n  constructor(props) { \n    super(props);\n    this.state = {\n      searchValue: \"\"\n    }\n  }\n\n  render = () => { \n    return (\n      <div>\n        <nav>\n          <h2 className=\"nav-city\">{this.props.city}</h2>\n          <form className=\"nav-form\" onSubmit={this.go}>\n            <input className=\"nav-input\" type=\"text\" placeholder=\"Search City\"\n                   onChange={this.changer} value={this.state.searchValue}></input>\n            <button className=\"nav-btn\" onClick={this.go}>Go</button>\n          </form>\n          <ul className=\"nav-pages\">\n            <li><Link to=\"/weather\">Weather</Link></li>\n            <li><Link to=\"/restaurants\">Restaurants</Link></li>\n            <li><Link to=\"/events\">Events</Link></li>\n          </ul >\n          <ul className=\"nav-log\">\n            {this.getLog()}\n          </ul>\n        </nav>\n      </div>\n    )\n  }\n  \n  getLog = () => { \n    if (this.props.loggedIn === false) { \n      return (\n        <>\n          <li><Link to=\"/signup\">Sign Up</Link></li>\n          <li><Link to=\"/login\">Log In</Link></li>\n        </>\n      )\n    } else {\n      return (\n        <>\n          <li><Link to={`/profile/${this.props.email}`}>{this.props.email}</Link></li>\n        </>\n      )\n    }\n  }\n\n  changer = (e) => { \n    this.setState({searchValue: e.target.value});\n  }\n\n  go = (e) => { \n    e.preventDefault();\n    this.props.getLatLng(this.state.searchValue);\n  }\n}\n\nconst mapStateToProps = state => { \n  return {\n    loggedIn: state.loggedIn,\n    city: state.city,\n    email: state.email\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLatLng: (city) => dispatch(getLatLng(city))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import React from 'react'\nimport { connect } from 'react-redux'\nimport \"./Map.css\"\n\nconst Map = (props) => { \n  if (props.map) {\n    return (\n      <div className=\"map-div\">\n        <img width=\"600\" height=\"300\" src={props.map } alt=\"your town\" className=\"map\"></img>\n      </div>\n    );\n  } else { \n    return (\n      <h2>Can't display map</h2>\n    )\n  }\n}\n\nconst mapStateToProps = ({ map }) => { \n  return {\n    map\n  }\n}\n\nexport default connect(mapStateToProps)(Map);","import React from 'react'\nimport { connect } from 'react-redux';\nimport \"./Current.css\"\n\nconst Current = (props) => {\n  if (props.weather && !props.weather.message) {\n    return (\n      <div key=\"currentWeatherDiv\" className=\"current\">\n        <h1 key=\"ch11\">{!props.weather ? \"Getting Current Weather Conditions\" : \"\"}</h1>\n        <ul key=\"currentul\" className=\"currentWeatherList\">\n          <li key={\"curli0\"}><h3 key=\"ch21\">{props.weather ?\n            `${props.weather.weather_code.value.toUpperCase().replace(\"_\", \" \")}` : \"\"}</h3></li>\n          <li key=\"curli1\">{props.weather ? `Current Temperature: ${props.weather.temp.value}\\u00B0\n                  ${props.weather.temp.units}` : \"\"}</li>\n          <li key=\"curli2\">{props.weather ? `Feels Like: ${props.weather.feels_like.value}\\u00B0\n                  ${props.weather.feels_like.units}` : \"\"}</li>\n          <li key=\"curli3\">{props.weather ? `Precipitation: ${getRain(props)}` : \"\"}</li>\n          <li key=\"curli4\">{props.weather ? `Cloud Cover: ${props.weather.cloud_cover.value}\n                  ${props.weather.cloud_cover.units}` : \"\"}</li>\n          <li key=\"curli5\">{props.weather ? `Wind Speed: ${props.weather.wind_speed.value}\n                  ${props.weather.wind_speed.units} ${getWindDir(props)}` : \"\"}</li>\n          <li key={\"curli6\"}>{props.weather ? `Humidity: ${props.weather.humidity.value} ${props.weather.humidity.units}` : \"\"}</li>\n          <li key=\"curli7\">{props.weather ? `Visibility: ${props.weather.visibility.value} ${props.weather.visibility.units}` : \"\"}</li>\n          <li key=\"curli8\">{props.weather ? `Sunrise: ${getSunrise(props)}` : \"\"}</li>\n          <li key=\"curli9\">{props.weather ? `Sunset: ${getSunset(props)}` : \"\"}</li>\n        </ul>\n        <h2 className=\"current-h2\" key=\"ch12\">(last updated: {getDate(new Date())} at {props.weather ?\n          `${getTime(props, props.weather.observation_time.value)})` : \"\"}</h2>\n      </div>\n    )\n  } else { \n    return (\n      <>\n        Loading Current Weather...\n      </>\n    )\n  }\n}\n\nconst getDate = (date) => {\n  return date.toLocaleDateString(\"en-US\")\n}\n\nconst getTime = (props, tim) => {\n  if (props.weather.temp) {\n    const timeNow = new Date(tim);\n    let hrs = timeNow.getHours();\n    const postfix = hrs >= 12 ? \"PM\" : \"AM\";\n    hrs = hrs > 12 ? hrs - 12 : hrs;\n    hrs = hrs === 0 ? 12 : hrs\n\n    const mins = timeNow.getMinutes();\n    const showMins = (mins < 10) ? `0${mins}` : `${mins}`;\n\n    const secs = timeNow.getSeconds();\n    const showSecs = (secs < 10) ? `0${secs}` : `${secs}`;\n\n    return `${hrs}:${showMins}:${showSecs} ${postfix}`;\n  }\n}\n\nconst getRain = (props) => {\n  const type = props.weather.precipitation_type.value;\n  const amt = props.weather.precipitation.value;\n  const units = props.weather.precipitation.units;\n  if (type === \"none\") {\n    return \"None\"\n  } else {\n    return `${type}: ${amt}${units}`\n  }\n}\n\nconst getSunrise = (props) => {\n  if (props.weather.sunrise) {\n    return getTime(props, props.weather.sunrise.value)\n  }\n}\n\nconst getSunset = (props) => {\n  if (props.weather.sunset) {\n    return getTime(props, props.weather.sunset.value)\n  }\n}\n\nconst getWindDir = (props) => {\n  const direction = props.weather.wind_direction;\n  if (direction.value <= 45 || direction.value > 315) {\n    return \"N\";\n  } else if (direction.value > 45 && direction.value <= 135) {\n    return \"W\";\n  } else if (direction.value > 135 && direction.value < 225) {\n    return \"S\";\n  } else {\n    return \"E\"\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weather\n  };\n}\n\nexport default connect(mapStateToProps)(Current);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport \"./Hourly.css\"\n\nconst Hourly = (props) => {\n  if (props.hourly) {\n    return (\n      <div className=\"hourly\" key=\"hourlydiv\">\n        <h2 className=\"hourly-h2\" key=\"hourlyh2\">12 Hour Forecast</h2>\n        <ul className=\"hourlyList\" key=\"hourlyul\">\n          {props.hourly.slice(1, 13).map((hour, i) => {\n            return (\n              <div key={`lihourdiv${i}`}>\n                <h3 key={`h2${i}`}>{`${getTime(hour.observation_time.value)} `}</h3>\n                <li key={`cond${i}`}>{`Conditions: ${hour.weather_code.value.toLowerCase().replace(\"_\", \" \")}`}</li>\n                <li key={`temp${i}`}>{`Temperature: ${hour.temp.value}\\u00B0${hour.temp.units}`}</li>\n                <li key={`prec${i}`}>{`Precipitation: ${hour.precipitation_type.value.toLowerCase().replace(\"_\", \" \")} \n                        (${hour.precipitation.value} ${hour.precipitation.units})`}</li>\n              </div>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  } else {\n    return (\n      <>\n        Loading Hourly Forecast...\n      </>\n    )\n  }\n}\n\n  const getTime = (time) => { \n    time = new Date(time);\n    let hrs = time.getHours();\n    const postfix = hrs >= 12 ? \"PM\" : \"AM\"; \n    hrs = hrs > 12 ? hrs - 12 : hrs;\n    hrs = hrs === 0 ? 12 : hrs\n\n    const mins = time.getMinutes();\n    const showMins = (mins < 10) ? `0${mins}` : `${mins}`;\n\n    return `${hrs}:${showMins} ${postfix}`;\n  }\n\nconst mapStateToProps = state => {\n  return {\n    hourly: state.hourly\n  };\n}\n\nexport default connect(mapStateToProps)(Hourly);","// check out a used car before buying\n\nimport React from 'react'\nimport { connect } from 'react-redux';\nimport \"./Daily.css\"\n\nconst Daily = (props) => {\n  if (props.daily) {\n    return (\n      <div className=\"daily\">\n        <h2 className=\"daily-h2\">10 Day Forecast</h2>\n        <ul className=\"dailyList\">\n          {props.daily.slice(2, 12).map((day, i) => {\n            return (\n              <div key={`dailyDiv${i}`}>\n                <h3 key={`date${i}`}>{getDay(new Date(day.observation_time.value))}</h3>\n                <li key={`cond${i}`}>{`Conditions: ${day.weather_code.value.toLowerCase().replace(\"_\", \" \")}`}</li>\n                <li key={`temp${i}`}>{`Temperature: ${day.temp[0].min.value}${day.temp[0].min.units} / \n                                  ${day.temp[1].max.value}${day.temp[1].max.units}`}</li>\n            \n              </div>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  } else { \n    return (\n      <>\n        Loading Daily Weather...\n      </>\n    )\n  }\n}\n\n  const getDay = (date) => { \n    switch (date.getDay()) { \n      case 0:\n        return \"Sunday\";\n      case 1:\n        return \"Monday\";\n      case 2:\n        return \"Tuesday\";\n      case 3:\n        return \"Wednesday\";\n      case 4:\n        return \"Thursday\";\n      case 5:\n        return \"Friday\";\n      case 6:\n        return \"Saturday\";\n      default: \n        return \"Unknown Day\"\n    }\n  }\n\nconst mapStateToProps = state => {\n  return {\n    daily: state.daily\n  };\n}\n\nexport default connect(mapStateToProps)(Daily);","import React from 'react';\nimport { connect } from 'react-redux';\nimport Current from \"./current/Current\";\nimport Hourly from \"./hourly/Hourly\";\nimport Daily from \"./daily/Daily\";\nimport './DisplayWeather.css';\n\n\nconst DisplayWeather = (props) => {\n    if (props.weather) {\n      return (\n        <div key=\"outerdiv\" className=\"outerDiv\">\n          <Hourly />\n          <Current/>\n          <Daily />\n        </div>\n      )\n    } else {\n      return (\n        \"Connection Error!\"\n      )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    weather: state.weather\n  };\n}\n\nexport default connect(mapStateToProps)(DisplayWeather);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport Nav from './components/nav/Nav';\nimport Map from './components/map/Map';\nimport DisplayWeather from './components/displayWeather/DisplayWeather';\nimport './App.css';\n\nclass App extends Component {\n\n  render = () => {\n    return (\n      <>\n        <Nav />\n        <div className=\"app-container\">\n          <Map className=\"app-map\" map={this.props.map} />\n        </div>\n        <DisplayWeather/>\n      </>\n    );\n  }\n\n  componentDidMount = () => { \n    this.run()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.city !== this.props.city) {\n      this.run();\n    }\n  }\n\n  run = async () => { \n    const latlng = await this.getLatLng();\n    await this.getWeather(latlng);\n    await this.getHourlyForecast(latlng);\n    await this.getDailyForecast(latlng);\n  }\n\n  getWeather = async (latlng) => {\n    const key = process.env.REACT_APP_CLIMACELL\n    const us = \"us\";\n    const more = `precipitation,precipitation_type,sunrise,sunset,visibility,cloud_cover,weather_code`\n    const fields = `temp,feels_like,wind_speed,dewpoint,humidity,wind_direction,baro_pressure,${more}`\n    const query = `lat=${latlng.lat}&lon=${latlng.lng}&unit_system=${us}&apikey=${key}&fields=${fields}`\n    const url = `https://api.climacell.co/v3/weather/realtime?${query}`\n    const fetchInfo = {\n      \"method\": \"GET\",\n      \"headers\": {}\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    // console.log(data);\n    if (!data.message) {\n      this.props.updateWeather(data);\n    }\n  }\n\n  getHourlyForecast = async (latlng) => {\n    const key = process.env.REACT_APP_CLIMACELL\n    const us = \"us\"\n    const fields = \"precipitation_type,precipitation,temp,weather_code\"\n    const query = `lat=${latlng.lat}&lon=${latlng.lng}&unit_system=${us}&apikey=${key}&fields=${fields}&start_time=now`\n    const url = `https://api.climacell.co/v3/weather/forecast/hourly?${query}`\n    const fetchInfo = {\n      \"method\": \"GET\",\n      \"headers\": {}\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    if (!data.message) {\n      this.props.updateHourly(data);\n    } \n  }\n\n  getDailyForecast = async (latlng) => {\n    const key = process.env.REACT_APP_CLIMACELL\n    const us = \"us\"\n    const fields = `temp,precipitation,weather_code`\n    const query = `lat=${latlng.lat}&lon=${latlng.lng}&unit_system=${us}&start_time=now&apikey=${key}&fields=${fields}`\n    const url = `https://api.climacell.co/v3/weather/forecast/daily?${query}`\n\n    const fetchInfo = {\n      \"method\": \"GET\",\n      \"headers\": {}\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    if (!data.message) {\n      this.props.updateDaily(data);\n    } \n  }\n\n  getLatLng = async () => { \n    const address = this.props.city;\n    const key = process.env.REACT_APP_MAPQUEST;\n    const url = `https://www.mapquestapi.com/geocoding/v1/address?key=${key}&inFormat=kvp&outFormat=json&location=${address}`;\n    const fetchInfo = {\n      \"method\": \"GET\",\n      \"headers\": {}\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    // console.log(data);\n    const latlng = data.results[0].locations[0].displayLatLng\n    await this.getMap(latlng);\n    this.props.updateCity(`${data.results[0].locations[0].adminArea5}, ${data.results[0].locations[0].adminArea3}`);\n\n    return latlng;\n  }\n\n  getMap = async (latlng) => { \n    const key = process.env.REACT_APP_MAPQUEST;\n    const map = `https://www.mapquestapi.com/staticmap/v4/getplacemap?key=${key}&location=${latlng.lat},${latlng.lng}&size=600,300&type=map&zoom=11&imagetype=png&scalebar=false&traffic=flow`;\n\n    this.props.updateMap(map);\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n    weather: state.weather,\n    hourly: state.hourly,\n    daily: state.daily, \n    map: state.map\n  };\n}\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCity: (city) => dispatch({ type: 'UPDATE_CITY', city }),\n    updateMap: (map) => dispatch({ type: 'UPDATE_MAP', map }),\n    updateDaily: (daily) => dispatch({type: 'UPDATE_DAILY', daily}),\n    updateHourly: (hourly) => dispatch({type: 'UPDATE_HOURLY', hourly}),\n    updateWeather: (weather) => dispatch({type: 'UPDATE_WEATHER', weather})\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../nav/Nav';\nimport \"./Profile.css\";\n\nclass Profile extends Component {\n  render = () => {\n    return (\n      <div className=\"settings\">\n        <Nav />\n        <h1>Welcome {`${this.props.email}`}</h1> {/* username */}\n        \n        {/* what default City? */}\n        {/* Show Current? */}\n        {/* Show 12 Hour? */}\n        {/* Show 10 Day? */}\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => { \n  return {\n    loggedIn: state.loggedIn,\n    email: state.email\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateCity: (city) => dispatch({ type: 'UPDATE_CITY', city })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateRestaurants } from \"../../../actions/restaurants\"\nimport { getLatLng } from \"../../../actions/getLatLng\"\nimport Nav from \"../../nav/Nav\"\nimport './Restaurants.css';\n\n\nclass Restaurants extends Component {\n\n  render = () => {\n    if (this.props.restaurants) {\n      return (\n        <>\n        <Nav />\n        <div className=\"rest-wrapper\">\n            <h1 className=\"rest-head\">Highly Rated Restaurants in {this.props.city}</h1>\n          <ul className=\"rest-list\">\n              {this.props.loading === \"success\" ? this.props.restaurants.map((rest, i) => {\n                return (\n                  <div className=\"rest-container\" key={`div${i}`}>\n                    <li key={`name${i}`} className=\"rest-name\">{rest.name}</li>\n                    <img className=\"rest-img\" key={`img${i}`} src={`${rest.image_url}`} alt={`${rest.name}`}></img>\n                    <ul className=\"rest-info\">\n                      <li key={`cat${i}`} className=\"rest-cat\">{rest.categories[0].title}</li>  \n                      <li key={`phone${i}`}>{rest.display_phone}</li>  \n                      <li key={`address${i}`}>{`${rest.location.address1}`}</li>  \n                      <li key={`city${i}`}>{`${rest.location.city}, ${rest.location.state} ${rest.location.zip_code}`}</li>  \n                    </ul>\n                  </div>\n                )\n              }) : \"Loading...\"}\n          </ul>\n          </div>\n        </>\n      )\n    } else { \n      return (\n        <>\n          <Nav />\n          <h2>Loading Restaurants in {this.props.city}...</h2>\n        </>\n      )\n    }\n  }\n\n  componentDidMount = async () => { \n    await this.props.updateRestaurants(this.props.city);\n  }\n\n  componentDidUpdate = async (prevProps) => {\n    if (prevProps.city !== this.props.city) {\n      await this.props.getLatLng(this.props.city);\n      await this.props.updateRestaurants(this.props.city);\n    }\n  }\n}\n\nconst mapStateToProps = ({city, restaurants, loading}) => {\n  return {\n    city,\n    restaurants,\n    loading\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLatLng: (city) => dispatch(getLatLng(city)),\n    updateRestaurants: (city) => dispatch(updateRestaurants(city)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurants);","export const updateRestaurants = (city) => { \n  return async (dispatch) => {\n    dispatch({type: \"START_LOADING\"})\n    const fetchInfo = {\n      \"method\": \"POST\",\n      \"headers\": {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ city })\n    }\n    const url = \"https://pg-city-info.herokuapp.com/api/v1/restaurants\"\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    dispatch({ type: 'LOADING_SUCCESS' });\n    dispatch({ type: 'UPDATE_RESTAURANTS', restaurants: data });\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateEvents } from \"../../../actions/events\"\nimport { getLatLng } from \"../../../actions/getLatLng\"\nimport Nav from \"../../nav/Nav\"\nimport './Events.css';\n\n\nclass Events extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      search: \"\",\n      searched: false,\n      searchEvents: []\n    }\n  }\n\n  render = () => {\n    if (this.props.events) {\n      if (this.props.events.length > 0) {\n        return (\n          <>\n            <Nav />\n            <div className=\"event-wrapper\">\n              <h1>Upcoming Events in {this.props.city}</h1>\n              <form onSubmit={this.handleForm}>\n                <button>Go</button>\n              </form>\n              <ul>\n                { this.props.loading === \"success\" ? !this.state.searched ? this.props.events.map((e, i) => {\n                  return (\n                    <div key={`div${i}`} className=\"events-wrapper\">\n                      <li key={`name${i}`} className=\"event-name\">{e._embedded.events[0].name}</li>\n                      <li key={`venue${i}`} className=\"event-name\">{e._embedded.events[0]._embedded.venues[0].name}</li>\n                      <li key={`class${i}`} className=\"event-name\">{e._embedded.events[0].classifications[0].genre.name}</li>\n                      <li key={`date${i}`} className=\"event-name\">{e._embedded.events[0].dates.start.localDate} @ {e._embedded.events[0].dates.start.localTime}</li>\n                    </div>\n                  )\n                }): this.state.searchedEvents.map((e, i) => {\n                  return (\n                    <div key={`div${i}`} className=\"events-wrapper\">\n                      <li key={`name${i}`} className=\"event-name\">{e._embedded.events[0].name}</li>\n                      <li key={`venue${i}`} className=\"event-name\">{e._embedded.events[0]._embedded.venues[0].name}</li>\n                      <li key={`class${i}`} className=\"event-name\">{e._embedded.events[0].classifications[0].genre.name}</li>\n                      <li key={`date${i}`} className=\"event-name\">{e._embedded.events[0].dates.start.localDate} @ {e._embedded.events[0].dates.start.localTime}</li>\n                    </div>\n                  )\n                }) : \"Loading...\"}\n              </ul>\n            </div>\n          </>\n        )\n      } else {\n        return (\n          <>\n            <Nav />\n            <h2 className=\"event-wrapper\">Sorry, Can't Find Any Events Nearby</h2>\n          </>\n        )\n      }\n    } else {\n      return (\n        <>\n          <Nav />\n          <h2>Loading Events in {this.props.city}...</h2>\n        </>\n      )\n    }\n  }\n\n  handleChange = (e) => { \n    e.preventDefault();\n    this.setState({ search: e.target.value });\n  }\n\n  handleForm = async (e) => {\n    e.preventDefault();\n    if (this.state.search === \"\") return\n    let localSearchedEvents = [];\n\n    this.props.events.forEach(e => {\n      if (e._embedded.events[0].classifications[0].genre.name.includes(this.state.search)) {\n        localSearchedEvents.push(e);\n      }\n    })\n    // console.log(searchedEvents);\n    this.setState({ searched: true, searchedEvents: localSearchedEvents });\n  }\n\n  componentDidMount = () => {\n    this.props.updateEvents(this.props.city);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.city !== this.props.city) {\n      this.props.getLatLng(this.props.city);\n      this.props.updateEvents(this.props.city);\n    }\n  }\n}\n\nconst mapStateToProps = ({city, events, loading}) => {\n  return {\n    city,\n    events,\n    loading\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLatLng: (city) => dispatch(getLatLng(city)),\n    updateEvents: (city) => dispatch(updateEvents(city)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Events);","export const updateEvents = (city) => {\n  return async (dispatch) => {\n    dispatch({type: \"START_LOADING\"})\n    const fetchInfo = {\n      \"method\": \"POST\",\n      \"headers\": {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ city })\n    }\n    const url = \"https://pg-city-info.herokuapp.com/api/v1/events\"\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    dispatch({ type: 'LOADING_SUCCESS' });\n    dispatch({ type: 'UPDATE_EVENTS', events: data });\n  }\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../../components/nav/Nav';\n \nclass Register extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      errors: \"\"\n    }\n      \n  }\n\n  render() {\n    return (\n      <>\n        <Nav />\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange} required />\n          <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} required />\n          <input type=\"password\" name=\"password_confirmation\" placeholder=\"confirm password\" value={this.state.password_confirmation}\n                  onChange={this.handleChange} required />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      </>\n    )\n  }\n\n  handleSubmit = async (e) => { \n    e.preventDefault();\n    const url = `http://localhost:3001/api/v1/signup`\n    const fetchInfo = {\n      \"method\": \"POST\",\n      \"headers\": {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          email: this.state.email,\n          password: this.state.password,\n          password_confirmation: this.state.password_confirmation\n        }\n      })\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    console.log(data);\n    if (data.created === true) { \n      await this.props.login(data.user.email, data.user.id);\n    }\n  }\n\n  handleChange = (e) => { \n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n  };\n}\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email) => dispatch({ type: 'LOGIN',  email })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Nav from '../../components/nav/Nav';\n\n \nclass Login extends Component {\n  constructor(props) { \n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: \"\"\n    }\n      \n  }\n\n  render() {\n    return (\n      <>\n        <Nav />\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange} required />\n          <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={this.handleChange} required />\n          <button type=\"submit\">Log In</button>\n        </form>\n      </>\n    )\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = `http://localhost:3001/api/v1/login`\n    const fetchInfo = {\n      \"method\": \"POST\",\n      \"headers\": {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          email: this.state.email,\n          password: this.state.password\n        }\n      })\n    }\n    const response = await fetch(url, fetchInfo);\n    const data = await response.json();\n    console.log(data);\n    if (data.logged_in === true) { \n      await this.props.login(data.user.email, data.user.id);\n    }\n  }\n\n  handleChange = (e) => { \n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city,\n  };\n}\n  \nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email) => dispatch({ type: 'LOGIN',  email })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport App from './App';\nimport Profile from './components/profile/Profile';\nimport Restaurants from './components/travel/restaurants/Restaurants';\nimport Events from './components/travel/events/Events';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport './index.css';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n        <Switch>\n        <Route exact path=\"/\"> \n          <App />\n        </Route>\n        <Route exact path=\"/weather\"> \n          <App />\n        </Route>\n        <Route exact path=\"/profile/:email\"> \n          <Profile />\n        </Route>\n        <Route exact path=\"/restaurants\"> \n          <Restaurants />\n        </Route>\n        <Route exact path=\"/events\"> \n          <Events />\n        </Route>\n        <Route exact path=\"/signup\"> \n          <Register />\n        </Route>\n        <Route exact path=\"/login\"> \n          <Login />\n        </Route>\n        </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}